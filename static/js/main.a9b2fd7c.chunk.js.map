{"version":3,"sources":["components/StuckButton.js","components/PreviousTip.js","constants/colors.js","components/LastTips.js","pages/MainPage.js","pages/TipPage.js","utils/tipParsing.js","components/WordSelector.js","components/Countdown.js","pages/QuestionsPage.js","App.js","serviceWorker.js","reducers/lastTips.js","reducers/index.js","index.js","logo.svg"],"names":["useStyles","createUseStyles","stuckButton","fontSize","fontFamily","fontStyle","padding","textDecoration","textTransform","userSelect","color","textAlign","StuckButton","classes","className","onClick","console","log","wrapper","background","borderRadius","width","marginBottom","minHeight","content","PreviousTip","index","side","topLeftColor","bottomRightColor","style","marginLeft","to","paddingLeft","paddingRight","tippsSection","scrollSnapAlign","title","margin","paddingTop","LastTips","Array","map","v","i","key","page","scrollSnapType","overflowY","overflowX","scrollPaddingTop","buttonAligner","display","justifyItems","alignItems","downwards","position","top","left","right","MainPage","icon","faChevronDown","paddingBottom","tipContent","marginRight","backgroundColor","maxWidth","tipTitle","tipNumber","tipCategory","tipMeta","TipPage","useParams","id","mode","React","useState","setTipContent","meta","setMeta","useEffect","fetch","process","catch","error","then","response","text","lines","split","metaVars","startsWith","tokens","slice","join","parseContent","source","escapeHtml","word","boxSizing","border","transition","wordActive","wordHolder","gridTemplateColumns","gridGap","justifyContent","WordSelector","focusWords","diverseWords","active","setActive","handleWordClick","el","classNames","height","progress","clipPath","holder","Countdown","thickness","children","dimensions","setDimensions","toMiddle","x","y","p","line","getClipPath","val","end","rev","angle","Math","PI","xComp","sin","yComp","cos","push","concat","reverse","bounds","onResize","contentRect","measureRef","div","clipPathUnits","d","fillRule","ref","flexDirection","task","QuestionsPage","Words","words","App","exact","path","component","Boolean","window","location","hostname","match","addTip","createAction","lastTips","createReducer","state","action","tip","payload","reducer","combineReducers","persistConfig","stateReconciler","autoMergeLevel2","whitelist","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.a9b2fd7c.chunk.js","sourcesContent":["import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = createUseStyles({\n  stuckButton: {\n    fontSize: \"min(8rem, 20vmin)\",\n    fontFamily: \"Courier Prime, monospace\",\n    fontStyle: \"italic\",\n    padding: \"10px 20px\",\n    textDecoration: \"none\",\n    textTransform: \"uppercase\",\n    userSelect: \"none\",\n    color: \"white\",\n    textAlign: \"center\",\n  },\n});\n\nexport const StuckButton = () => {\n  const classes = useStyles();\n  const handleClick = () => {\n    console.log(\"Clicked\");\n  };\n  return (\n    <div className={classes.stuckButton} onClick={handleClick}>\n      I am <br />\n      Stuck\n    </div>\n  );\n};\n","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { cat1br, cat1tl, cat2br, cat2tl } from \"../constants/colors\";\nimport { Link } from \"react-router-dom\";\nimport { parseContent } from \"../utils/tipParsing\";\nimport tipsCollection from \"../constants/tipsCollection.json\";\n\nconst useStyles = createUseStyles({\n  wrapper: {\n    background:\n      \"repeating-linear-gradient(-35deg, rgba(254, 0, 110, 1) 0%, rgba(1, 31, 128, 1) 100%)\",\n    padding: 5,\n    borderRadius: 50,\n    width: \"100vmin\",\n    marginBottom: \"5vmin\",\n    minHeight: 120,\n  },\n  content: {\n    background: \"white\",\n    borderRadius: 48,\n    padding: 10,\n    minHeight: 110,\n    color: \"black\",\n  },\n});\n\nexport const PreviousTip = ({ index = 0, side = 0 }) => {\n  const classes = useStyles();\n  const topLeftColor = side === 0 ? cat1tl : cat2tl;\n  const bottomRightColor = side === 0 ? cat1br : cat2br;\n  return (\n    <div\n      className={classes.wrapper}\n      style={{\n        marginLeft: side === 0 ? \"10vmin\" : \"-10vmin\",\n        background: `repeating-linear-gradient(-35deg, ${bottomRightColor} 0%, ${topLeftColor} 100%)`,\n      }}\n    >\n      <Link\n        to={\"/tip/diverse/1-walk-in-nature\"}\n        style={{ textDecoration: \"none\" }}\n      >\n        <div\n          className={classes.content}\n          style={{\n            paddingLeft: side === 0 ? 20 : 100,\n            paddingRight: side === 0 ? 100 : 20,\n          }}\n        >\n          {side == 0 ? (\n            <>\n              <p>Divergent Thinking #1</p>\n              <h2>Take a Walk in Nature</h2>\n            </>\n          ) : (\n            <>\n              <p>Divergent Thinking #21</p>\n              <h2>Creative Writing</h2>\n            </>\n          )}\n        </div>\n      </Link>\n    </div>\n  );\n};\n","export const cat1tl = \"#01ffdd\";\nexport const cat2tl = \"#ffa801\";\nexport const cat1br = \"#011f80\";\nexport const cat2br = \"#fe006e\";\nexport const maintl = \"#fe006e\";\nexport const mainbr = \"#011f80\";\n","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { PreviousTip } from \"./PreviousTip\";\n\nconst useStyles = createUseStyles({\n  tippsSection: {\n    minHeight: \"100vh\",\n    scrollSnapAlign: \"start\",\n  },\n  title: {\n    fontSize: \"calc(48px + 2vmin)\",\n    fontFamily: \"Courier Prime, monospace\",\n    userSelect: \"none\",\n    color: \"white\",\n    margin: 0,\n    padding: 0,\n    textAlign: \"left\",\n    paddingLeft: \"min(2em, 2vmin)\",\n    paddingTop: \"min(0.5em, 2vmin)\",\n  },\n});\n\nexport const LastTips = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.tippsSection}>\n      <h1 className={classes.title}>Last.Tipps</h1>\n      {[...Array(2)].map((v, i) => (\n        <PreviousTip key={i} side={i % 2} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { StuckButton } from \"../components/StuckButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { LastTips } from \"../components/LastTips\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = createUseStyles({\n  page: {\n    textAlign: \"center\",\n    background:\n      \"repeating-linear-gradient(-35deg, rgba(254, 0, 110, 1) 10vh, rgba(1, 31, 128, 1) 80vh, rgba(1, 31, 128, 1) 120vh, rgba(254, 0, 110, 1) 190vh)\",\n    fontSize: \"calc(10px + 2vmin)\",\n    minHeight: \"100vh\",\n    scrollSnapType: \"y mandatory\",\n    overflowY: \"scroll\",\n    overflowX: \"hidden\",\n    scrollPaddingTop: \"5vh\",\n  },\n  buttonAligner: {\n    minHeight: \"100vh\",\n    display: \"grid\",\n    justifyItems: \"center\",\n    alignItems: \"center\",\n    scrollSnapAlign: \"center\",\n    marginBottom: \"calc(10px + 2vmin)\",\n  },\n  downwards: {\n    color: \"white\",\n    fontSize: \"calc(48px + 2vmin)\",\n    position: \"absolute\",\n    top: \"calc(100vh - 48px - 4vmin)\",\n    left: 0,\n    right: 0,\n  },\n});\n\nexport const MainPage = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.page}>\n      <div className={classes.buttonAligner}>\n        <Link to={\"/questions\"} style={{ textDecoration: \"none\" }}>\n          <StuckButton />\n        </Link>\n        <div className={classes.downwards}>\n          <FontAwesomeIcon icon={faChevronDown} />\n        </div>\n      </div>\n      <LastTips />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { useParams } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport { cat1tl, cat1br, cat2tl, cat2br } from \"../constants/colors\";\nimport { parseContent } from \"../utils/tipParsing\";\n\nconst useStyles = createUseStyles({\n  page: {\n    background:\n      \"repeating-linear-gradient(-35deg, rgba(254, 0, 110, 1) 10vh, rgba(1, 31, 128, 1) 80vh, rgba(1, 31, 128, 1) 120vh, rgba(254, 0, 110, 1) 190vh)\",\n    fontSize: \"1rem\",\n    minHeight: \"100vh\",\n    paddingBottom: 1,\n  },\n  tipContent: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"min(800px, 90vw)\",\n    backgroundColor: \"white\",\n    borderRadius: 35,\n    paddingBottom: \"1vh\",\n    paddingTop: \"0.5em\",\n    paddingLeft: \"1em\",\n    paddingRight: \"1em\",\n    minHeight: \"70vh\",\n    \"@global img\": {\n      width: \"100%\",\n      maxWidth: \"700px\",\n    },\n    \"@global span\": {\n      textAlign: \"center\",\n      width: \"100%\",\n      display: \"inline-block\",\n    },\n  },\n  tipTitle: {\n    fontSize: \"2rem\",\n    fontFamily: \"Courier Prime, monospace\",\n    textDecoration: \"none\",\n    userSelect: \"none\",\n    color: \"white\",\n  },\n  tipNumber: {\n    fontSize: \"2rem\",\n    fontFamily: \"Courier Prime, monospace\",\n    textDecoration: \"none\",\n    userSelect: \"none\",\n    color: \"white\",\n  },\n  tipCategory: {\n    fontSize: \"1rem\",\n    fontStyle: \"italic\",\n    textDecoration: \"none\",\n    userSelect: \"none\",\n    color: \"white\",\n  },\n  tipMeta: {\n    padding: \"0 0 10px 5vw\",\n  },\n});\n\nexport const TipPage = () => {\n  const { id, mode } = useParams();\n  const classes = useStyles();\n  const [tipContent, setTipContent] = React.useState(\"Loading...\");\n  const [meta, setMeta] = React.useState({});\n  React.useEffect(() => {\n    const p = process.env.PUBLIC_URL + \"/tips/\" + mode + \"/\" + id + \".md\";\n    fetch(p)\n      .catch((error) => console.log(error))\n      .then((response) => {\n        return response.text();\n      })\n      .then((text) => {\n        console.log(text);\n        const { metaVars, content } = parseContent(text);\n        setMeta(metaVars);\n        setTipContent(content);\n      });\n  }, [id, mode]);\n  const topLeftColor = mode === \"focused\" ? cat1tl : cat2tl;\n  const bottomRightColor = mode === \"focused\" ? cat1br : cat2br;\n  return (\n    <div\n      className={classes.page}\n      style={{\n        background: `repeating-linear-gradient(-35deg, ${bottomRightColor} 0%, ${topLeftColor} 100%)`,\n      }}\n    >\n      <div className={classes.tipMeta}>\n        <div className={classes.tipNumber}>\n          <span style={{ fontSize: \"0.75em\" }}>#</span>\n          {meta[\"number\"]}\n        </div>\n        <div className={classes.tipTitle}>{meta[\"title\"]}</div>\n        <div className={classes.tipCategory}>{meta[\"category\"]}</div>\n      </div>\n      <div className={classes.tipContent}>\n        <ReactMarkdown source={tipContent} escapeHtml={false} />\n      </div>\n    </div>\n  );\n};\n","export const parseContent = (text) => {\n  let lines = text.split(\"\\n\");\n  var i = 0;\n  let metaVars = {};\n  while (lines[i].startsWith(\"--\")) {\n    let tokens = lines[i].slice(2).split(\" \");\n    metaVars[tokens[0]] = tokens.slice(1).join(\" \");\n    i++;\n  }\n  return { metaVars: metaVars, content: lines.slice(i).join(\"\\n\") };\n};\n","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport classNames from \"classnames\";\n\nconst useStyles = createUseStyles({\n  word: {\n    position: \"relative\",\n    color: \"white\",\n    fontSize: \"2rem\",\n    padding: \"0.1em 0.5em\",\n    boxSizing: \"border-box\",\n    border: \"0.1em solid transparent\",\n    borderRadius: \"0.1em\",\n    transition: \"0.2s ease-in-out\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(200,200,200,0.2)\",\n    },\n  },\n  wordActive: {\n    border: \"0.1em solid white\",\n  },\n  wordHolder: {\n    position: \"relative\",\n    width: \"100%\",\n    display: \"grid\",\n    gridTemplateColumns: \"auto auto\",\n    gridGap: \"0.25rem 0.5rem\",\n    justifyContent: \"space-around\",\n  },\n});\n\nexport const WordSelector = ({ focusWords = [], diverseWords = [] }) => {\n  const classes = useStyles();\n  const [active, setActive] = React.useState({});\n  const handleWordClick = (el) => {\n    if (active[el]) {\n      setActive({ ...active, [el]: false });\n    } else {\n      setActive({ ...active, [el]: true });\n    }\n  };\n  return (\n    <div className={classes.wordHolder}>\n      {focusWords.map((el) => (\n        <span\n          className={classNames(\n            classes.word,\n            active[el] ? classes.wordActive : null\n          )}\n          onClick={() => handleWordClick(el)}\n        >\n          {el}\n        </span>\n      ))}\n      {diverseWords.map((el) => (\n        <span\n          className={classNames(\n            classes.word,\n            active[el] ? classes.wordActive : null\n          )}\n          onClick={() => handleWordClick(el)}\n        >\n          {el}\n        </span>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport Measure from \"react-measure\";\nimport { createUseStyles } from \"react-jss\";\nimport { Link } from \"react-router-dom\";\nimport { cat1tl } from \"../constants/colors\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst useStyles = createUseStyles({\n  wrapper: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  progress: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: cat1tl,\n    transition: \"0.4s ease-in-out clip-path\",\n    clipPath: \"url(#clipCountdown)\",\n  },\n  holder: {\n    top: 5,\n    left: 5,\n    width: \"calc(100% - 10px)\",\n    height: \"calc(100% - 10px)\",\n    position: \"absolute\",\n    transition: \"0.3s ease-in\",\n  },\n});\n\nexport const Countdown = ({ progress = 0, thickness = 0.05, children }) => {\n  const [dimensions, setDimensions] = React.useState({ width: -1, height: -1 });\n  const classes = useStyles();\n  const toMiddle = (x, y, p) => {\n    const aspect = dimensions.width / dimensions.height;\n    let r_x = x + p * (0.5 - x);\n    let r_y = y + aspect * p * (0.5 - y);\n    return [r_x, r_y];\n  };\n  const line = (x, y) => `L ${x} ${y}`;\n  const getClipPath = (progress) => {\n    let val = [\"M 0.5 0\"];\n    let end = [line(...toMiddle(0.5, 0, thickness)), \" Z\"];\n    let rev = [];\n    const angle = progress * 2 * Math.PI;\n    let xComp = 0.5 * Math.sin(angle) + 0.5;\n    let yComp = -0.5 * Math.cos(angle) + 0.5;\n    if (progress < 0.125) {\n      yComp = 0;\n    }\n    if (progress >= 0.125) {\n      val.push(line(1, 0));\n      rev.push(line(...toMiddle(1, 0, thickness)));\n      if (progress < 0.375) {\n        xComp = 1;\n      }\n    }\n    if (progress >= 0.375) {\n      val.push(line(1, 1));\n      rev.push(line(...toMiddle(1, 1, thickness)));\n      if (progress < 0.625) {\n        yComp = 1;\n      }\n    }\n    if (progress >= 0.625) {\n      val.push(line(0, 1));\n      rev.push(line(...toMiddle(0, 1, thickness)));\n      if (progress < 0.875) {\n        xComp = 0;\n      }\n    }\n    if (progress >= 0.875) {\n      val.push(line(0, 0));\n      rev.push(line(...toMiddle(0, 0, thickness)));\n      yComp = 0;\n    }\n    val.push(line(xComp, yComp));\n    rev.push(line(...toMiddle(xComp, yComp, thickness)));\n    val = val.concat(rev.reverse(), end);\n    return val.join(\" \");\n  };\n  return (\n    <Measure\n      bounds\n      onResize={(contentRect) => {\n        setDimensions(contentRect.bounds);\n      }}\n    >\n      {({ measureRef }) => (\n        <div className={classes.wrapper}>\n          <animated.div\n            className={classes.progress}\n            style={{ clipPath: getClipPath(progress) }}\n          />\n          <svg width={0} height={0}>\n            <clipPath id=\"clipCountdown\" clipPathUnits=\"objectBoundingBox\">\n              <path d={getClipPath(progress)} fillRule={\"evenodd\"} />\n            </clipPath>\n          </svg>\n          <div className={classes.holder} ref={measureRef}>\n            {children}\n          </div>\n        </div>\n      )}\n    </Measure>\n  );\n};\n","import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { useParams } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport { cat1tl, cat1br, cat2tl, cat2br } from \"../constants/colors\";\nimport Words from \"../constants/words.json\";\nimport { WordSelector } from \"../components/WordSelector\";\nimport { Countdown } from \"../components/Countdown\";\n\nconst useStyles = createUseStyles({\n  page: {\n    position: \"relative\",\n    width: \"100vw\",\n    background:\n      \"repeating-linear-gradient(-35deg, rgba(254, 0, 110, 1) 10vh, rgba(1, 31, 128, 1) 80vh, rgba(1, 31, 128, 1) 120vh, rgba(254, 0, 110, 1) 190vh)\",\n    height: \"100vh\",\n  },\n  holder: {\n    position: \"relative\",\n    padding: \"5vmin\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  task: {\n    fontSize: \"2rem\",\n    textDecoration: \"none\",\n    userSelect: \"none\",\n    color: \"white\",\n    marginBottom: \"12vh\",\n    paddingTop: \"10vh\",\n    textTransform: \"capitalize\",\n  },\n});\n\nexport const QuestionsPage = () => {\n  const classes = useStyles();\n  const [words, setWords] = React.useState(Words);\n  const shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n  return (\n    <div className={classes.page}>\n      <Countdown progress={0.9} thickness={0.05}>\n        <div className={classes.holder}>\n          <div className={classes.task}>Select words fitting your task:</div>\n          <WordSelector\n            focusWords={words.focusWords}\n            diverseWords={words.diverseWords}\n          />\n        </div>\n      </Countdown>\n    </div>\n  );\n};\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { MainPage } from \"./pages/MainPage\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { TipPage } from \"./pages/TipPage\";\nimport { QuestionsPage } from \"./pages/QuestionsPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n        <Route path=\"/tip/:mode/:id\" component={TipPage} />\n        <Route path=\"/questions\" component={QuestionsPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nconst addTip = createAction(\"lasttips/add\");\nconst removeTip = createAction(\"lasttips/remove\");\n\nexport const lastTips = createReducer([], {\n  [addTip]: (state, action) => {\n    const tip = action.payload;\n    state.push(tip);\n  },\n});\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport { lastTips } from \"./lastTips\";\n\nconst reducer = combineReducers({ lastTips });\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./reducers\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  stateReconciler: autoMergeLevel2,\n  whitelist: [\"lasttips\"],\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({ reducer: persistedReducer });\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}